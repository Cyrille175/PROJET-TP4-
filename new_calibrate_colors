def calibrate_colors(self):
        """
        Gère le calibrage des couleurs via l'interface graphique.
        Remplace la boucle while True de la version console par des clics répétés sur le bouton.
        Utilise le champ de texte pour le nom de la couleur et affiche les messages dans la zone de log.
        """
        # Vérifie si le mode calibrage n'est pas encore actif
        if not self.calibration_mode:
            # Active le mode calibrage et met à jour le texte du bouton
            self.calibration_mode = True
            self.calibrate_button.setText("Calibrer couleur/Continuer")
            self.log("=== MODE CALIBRAGE ===")
            self.log("Pose une couleur sous le pied de Marty.")
            self.log("Entrez un nom de couleur (ex: 'rouge') ou 'f' pour terminer.")
            return

        # Récupère le nom de la couleur entré dans le champ de texte
        color_name = self.color_input.text().strip().lower()
        if not color_name:
            self.log("Erreur : Veuillez entrer un nom de couleur.")
            return

        # Si l'utilisateur entre 'f', termine le calibrage
        if color_name == "f":
            self.calibration_mode = False
            self.calibrate_button.setText("Démarrer/Calibrer couleur")
            self.log("Calibrage terminé.")
            self.color_input.clear()
            return

        # Indique à l'utilisateur de placer la couleur
        self.log(f"Placez la couleur '{color_name}' sous le pied de Marty et attendez...")

        try:
            # Vérifie si le pied est posé sur le sol
            if not my_marty.foot_on_ground("left"):
                self.log("Le pied n'est pas posé. Recommencez.")
                return

            # Positionne Marty droit avant de lire la couleur
            my_marty.stand_straight(move_time=2000)
            time.sleep(0.5)  # Délai pour éviter de surcharger le robot

            # Lit les valeurs RGB du capteur de couleur
            color_values = my_marty.get_color_sensor_hex("left")
            rh, gh, bh = color_values[1], color_values[2], color_values[3]
            r = int(rh, 16)
            g = int(gh, 16)
            b = int(bh, 16)

            # Enregistre la couleur dans le dictionnaire
            self.color_reference[color_name] = (r, g, b)
            self.log(f"Couleur '{color_name}' enregistrée : R={r}, G={g}, B={b}")
            self.color_input.clear()
            self.log("Entrez une autre couleur ou 'f' pour terminer.")
        except Exception as e:
            self.log(f"Erreur lors du calibrage : {str(e)}")
